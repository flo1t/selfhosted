name: Deploy Changes To Hosts
on:
  push:
    paths:
      - hosts/**
  push:
    paths:
      - .gitea/workflows/deploy_changes_to_hosts.yml

jobs:
  Deploy Changes To Hosts:
    runs-on: ubuntu-latest
    container:
      image: catthehacker/ubuntu:act-latest
      volumes:
        - /data:/opt/hostedtoolcache
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Update timestamp of local repository
        run: |
          git ls-tree -r --name-only HEAD | while read filename; do
            unixtime=$(git log -1 --format="%at" -- "${filename}")
            touchtime=$(date -d @$unixtime +'%Y%m%d%H%M.%S')
            touch -t ${touchtime} "${filename}"
          done
          find ${{ gitea.workspace }} -depth -type d -execdir sh -c 'touch "$PWD/$0" -r "$PWD/$0/$( ls -t "$PWD/$0" | head -n 1 )"' {} \;
      - name: Install dependencies
        run: |
          echo "Check if rsync is installed"
          if ! [ -x "$(command -v rsync)" ]; then
            echo "Rsync is not installed, installing rsync"
            apt update -y && apt-get install -y --no-install-recommends rsync
          else
            echo "Rsync is already installed"
          fi
      - name: Deploy repository to hosts
        shell: bash
        run: |
          echo "Deploy repository to hosts"
          homedir="${{ vars.HOMEDIR }}"
          scriptpath="$homedir/scripts"
          dockerpath="$homedir/docker"
          domain="${{ vars.LOCAL_DOMAIN }}"
          ssh_user="${{ secrets.SSH_USER }}"
          declare -A HOSTS=( ["rpi01"]="${{ secrets.SSH_RPI01_PRIVATE_KEY }}" ["rpi03"]="${{ secrets.SSH_RPI03_PRIVATE_KEY }}" ["srv01"]="${{ secrets.SSH_SRV01_PRIVATE_KEY }}" )
          for host in "${!HOSTS[@]}"; do
            echo "Add SSH key for '$host'"
            install -m 600 -D /dev/null ~/.ssh/id_rsa_$host_gitea_runner
            echo "${HOSTS[$host]}" > ~/.ssh/id_rsa_$host_gitea_runner
            (ssh-keyscan -H $host.$domain > ~/.ssh/known_hosts) 2> /dev/null
            for dir in $(find "${{ gitea.workspace }}/hosts" -mindepth 1 -maxdepth 1 -type d); do
              folder=$(basename $dir)
              if [[ "$folder" = "$host" || "$folder" = "all"  ]]; then
                echo "Copy changed files from '$dir' to '$host'"
                changed_files=$(rsync -e "ssh -i ~/.ssh/id_rsa_$host_gitea_runner" -a $dir/ $ssh_user@$host.$domain:$homedir --out-format="%f")
                if [ -n "$changed_files" ]; then
                  echo "Files changed: '$changed_files'"
                  echo "Add +x permission to $scriptpath/*"
                  ssh -i ~/.ssh/id_rsa_$host_gitea_runner $ssh_user@$host.$domain "chmod +x $scriptpath/*"
                fi
                changed_containers=$(echo "$changed_files" | grep -vE '(README\.md|setup-files)' | sed -n 's#.*/docker/\([^/]*\)/.*#\1#p' | sort -u)
                for container in $changed_containers; do
                  if [[ "$container" != "gitea" ]]; then
                    echo "Container '$container' changed: Rebuilding docker container"
                    ssh -i ~/.ssh/id_rsa_$host_gitea_runner $ssh_user@$host.$domain "find $dockerpath/$container -mindepth 1 -maxdepth 1 -type f -name *-compose.yml -exec docker compose -f {} up -d --remove-orphans --force-recreate \;"
                  else
                    echo "Skipping '$container': It will latest be rebuild during the backup job"
                  fi                
                done
              fi
            done 
          done
      - name: Cleanup SSH credentials
        run: |
          echo "Cleanup SSH credentials"
          rm -f ~/.ssh/gitea